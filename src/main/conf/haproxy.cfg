global
  log 127.0.0.1 local2 info
defaults
  mode http
  log global
  option httplog
  option  http-server-close
  option  dontlognull
  option  redispatch
  option  contstats
  retries 3
  backlog 10000
  timeout client          100s
  timeout connect         100s
  timeout server          100s
# timeout tunnel available in ALOHA 5.5 or HAProxy 1.5-dev10 and higher
# timeout tunnel        3600s
  timeout http-keep-alive  1s
  timeout http-request    15s
  timeout queue           30s
  timeout tarpit          60s
  default-server inter 3s rise 2 fall 3
  option forwardfor
  
frontend ft_web
  #bind 121.40.149.171:9999 name http
  bind 121.40.237.99:9999 name http
  maxconn 60000
 
## routing based on Host header
  #acl host_ws hdr_beg(Host) -i ws.
  #use_backend bk_ws if host_ws
 
## routing based on websocket protocol header
  acl hdr_connection_upgrade hdr(Connection)  -i upgrade
  acl hdr_upgrade_websocket  hdr(Upgrade)     -i websocket
 
  use_backend bk_ws if hdr_connection_upgrade hdr_upgrade_websocket
  default_backend bk_web
  
backend bk_web                                                   
  balance roundrobin                                             
  option httpchk HEAD /                                          
  server websrv1 127.0.0.1:80 maxconn 100 weight 10 cookie websrv1 check
 
backend bk_ws                                                    
  balance roundrobin
 
## websocket protocol validation
  acl hdr_connection_upgrade hdr(Connection)                 -i upgrade
  acl hdr_upgrade_websocket  hdr(Upgrade)                    -i websocket
  acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
  acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
  acl hdr_host               hdr_cnt(Sec-WebSocket-Version)  eq 1
  http-request deny if ! hdr_connection_upgrade ! hdr_upgrade_websocket ! hdr_websocket_key ! hdr_websocket_version ! hdr_host
 
## ensure our application protocol name is valid 
## (don't forget to update the list each time you publish new applications)
  #acl ws_valid_protocol hdr(Sec-WebSocket-Protocol) echo-protocol
  #http-request deny if ! ws_valid_protocol
 
## websocket health checking
  option httpchk GET / HTTP/1.1\r\nHost:\ 121.40.149.171\r\nConnection:\ Upgrade\r\nUpgrade:\ websocket\r\nSec-WebSocket-Key:\ haproxy\r\nSec-WebSocket-Version:\ 13\r\nSec-WebSocket-Protocol:\ echo-protocol
  http-check expect status 101
 
  server socketsrv1 127.0.0.1:8080 maxconn 30000 weight 10 check
  server socketsrv2 127.0.0.1:8090 maxconn 30000 weight 10 check
